Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./wiring.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
LOAD ./hooks.o
LOAD ./main.o
LOAD ./wiring.o
LOAD ./wiring_digital.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4d2
 *(.vectors)
 .vectors       0x00000000       0x68 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000068       0x5a ./wiring_digital.o
                0x00000068                port_to_mode_PGM
                0x00000086                digital_pin_to_port_PGM
                0x0000009a                digital_pin_to_bit_mask_PGM
                0x00000072                port_to_output_PGM
                0x0000007c                port_to_input_PGM
                0x000000ae                digital_pin_to_timer_PGM
                0x000000c2                . = ALIGN (0x2)
                0x000000c2                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000c2        0x0 linker stubs
 *(.trampolines*)
                0x000000c2                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000c2                __ctors_start = .
 *(.ctors)
                0x000000c2                __ctors_end = .
                0x000000c2                __dtors_start = .
 *(.dtors)
                0x000000c2                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000c2        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x000000c2                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000c2        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000ce       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000000ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000de        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000e6        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x000000e6                __vector_22
                0x000000e6                __vector_1
                0x000000e6                __vector_24
                0x000000e6                __vector_12
                0x000000e6                __bad_interrupt
                0x000000e6                __vector_6
                0x000000e6                __vector_3
                0x000000e6                __vector_23
                0x000000e6                __vector_25
                0x000000e6                __vector_11
                0x000000e6                __vector_13
                0x000000e6                __vector_17
                0x000000e6                __vector_19
                0x000000e6                __vector_7
                0x000000e6                __vector_5
                0x000000e6                __vector_4
                0x000000e6                __vector_9
                0x000000e6                __vector_2
                0x000000e6                __vector_21
                0x000000e6                __vector_15
                0x000000e6                __vector_8
                0x000000e6                __vector_14
                0x000000e6                __vector_10
                0x000000e6                __vector_18
                0x000000e6                __vector_20
 .text          0x000000ea        0x0 ./hooks.o
 .text          0x000000ea        0x0 ./main.o
 .text          0x000000ea        0x0 ./wiring.o
 .text          0x000000ea        0x0 ./wiring_digital.o
 .text          0x000000ea        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x000000ea        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000000ea                . = ALIGN (0x2)
 *(.text.*)
 .text.__empty  0x000000ea        0x2 ./hooks.o
                0x000000ea                yield
 .text.loop     0x000000ec       0x2a ./main.o
                0x000000ec                loop
 .text.setup    0x00000116        0xa ./main.o
                0x00000116                setup
 .text.main     0x00000120       0x12 ./main.o
                0x00000120                main
 .text.__vector_16
                0x00000132       0x90 ./wiring.o
                0x00000132                __vector_16
 .text.millis   0x000001c2       0x1c ./wiring.o
                0x000001c2                millis
 .text.micros   0x000001de       0x4c ./wiring.o
                0x000001de                micros
 .text.delayMicroseconds
                0x0000022a       0x16 ./wiring.o
                0x0000022a                delayMicroseconds
 .text.init     0x00000240       0x76 ./wiring.o
                0x00000240                init
 .text.delay    0x000002b6       0x7a ./wiring.o
                0x000002b6                delay
 .text.pinMode  0x00000330       0x7e ./wiring_digital.o
                0x00000330                pinMode
 .text.turnOffPWM
                0x000003ae       0x5a ./wiring_digital.o
 .text.digitalWrite
                0x00000408       0x66 ./wiring_digital.o
                0x00000408                digitalWrite
 .text.digitalRead
                0x0000046e       0x60 ./wiring_digital.o
                0x0000046e                digitalRead
 .text.libgcc   0x000004ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000004ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000004ce                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004ce        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000004ce                exit
                0x000004ce                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004ce        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000004d2                _etext = .

.data           0x00800100        0x0 load address 0x000004d2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 ./hooks.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 ./wiring.o
 .data          0x00800100        0x0 ./wiring_digital.o
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x9
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800100        0x0 ./hooks.o
 .bss           0x00800100        0x0 ./main.o
 .bss           0x00800100        0x0 ./wiring.o
 .bss           0x00800100        0x0 ./wiring_digital.o
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.timer0_overflow_count
                0x00800100        0x4 ./wiring.o
                0x00800100                timer0_overflow_count
 .bss.timer0_millis
                0x00800104        0x4 ./wiring.o
                0x00800104                timer0_millis
 .bss.timer0_fract
                0x00800108        0x1 ./wiring.o
 *(COMMON)
                0x00800109                PROVIDE (__bss_end, .)
                0x000004d2                __data_load_start = LOADADDR (.data)
                0x000004d2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800109        0x0
                0x00800109                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800109                PROVIDE (__noinit_end, .)
                0x00800109                _end = .
                0x00800109                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x14dc
 *(.stab)
 .stab          0x00000000      0x108 ./hooks.o
 .stab          0x00000108      0x570 ./main.o
                                0x57c (size before relaxing)
 .stab          0x00000678      0x6a8 ./wiring.o
                                0x954 (size before relaxing)
 .stab          0x00000d20      0x7bc ./wiring_digital.o
                                0xaec (size before relaxing)

.stabstr        0x00000000      0xea8
 *(.stabstr)
 .stabstr       0x00000000      0xea8 ./hooks.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(12_Blink.elf elf32-avr)
LOAD linker stubs
